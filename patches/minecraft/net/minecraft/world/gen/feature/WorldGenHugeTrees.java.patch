--- ../src_base/minecraft/net/minecraft/world/gen/feature/WorldGenHugeTrees.java
+++ ../src_work/minecraft/net/minecraft/world/gen/feature/WorldGenHugeTrees.java
@@ -2,8 +2,10 @@
 
 import java.util.Random;
 import net.minecraft.block.Block;
+import net.minecraft.block.BlockSapling;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
+import net.minecraftforge.common.ForgeDirection;
 
 public class WorldGenHugeTrees extends WorldGenerator
 {
@@ -57,8 +59,13 @@
                         if (var8 >= 0 && var8 < 256)
                         {
                             var12 = par1World.getBlockId(var10, var8, var11);
-
-                            if (var12 != 0 && var12 != Block.leaves.blockID && var12 != Block.grass.blockID && var12 != Block.dirt.blockID && var12 != Block.wood.blockID && var12 != Block.sapling.blockID)
+                            Block block = Block.blocksList[var12];
+
+                            if (block != null &&
+                               !block.isLeaves(par1World, var10, var8, var11) &&
+                               !block.canSustainPlant(par1World, var10, var8, var11, ForgeDirection.UP, (BlockSapling)Block.sapling) && 
+                               !block.isWood(par1World, var10, var8, var11) &&
+                               var12 != Block.sapling.blockID)
                             {
                                 var7 = false;
                             }
@@ -78,13 +85,15 @@
             else
             {
                 var8 = par1World.getBlockId(par3, par4 - 1, par5);
-
-                if ((var8 == Block.grass.blockID || var8 == Block.dirt.blockID) && par4 < 256 - var6 - 1)
-                {
-                    par1World.setBlock(par3, par4 - 1, par5, Block.dirt.blockID);
-                    par1World.setBlock(par3 + 1, par4 - 1, par5, Block.dirt.blockID);
-                    par1World.setBlock(par3, par4 - 1, par5 + 1, Block.dirt.blockID);
-                    par1World.setBlock(par3 + 1, par4 - 1, par5 + 1, Block.dirt.blockID);
+                Block soil = Block.blocksList[var8];
+                boolean isValidSoil = soil != null && soil.canSustainPlant(par1World, par3, par4 - 1, par5, ForgeDirection.UP, (BlockSapling)Block.sapling);
+
+                if (isValidSoil && par4 < 256 - var6 - 1)
+                {
+                    onPlantGrow(par1World, par3,     par4 - 1, par5,     par3, par4, par5);
+                    onPlantGrow(par1World, par3 + 1, par4 - 1, par5,     par3, par4, par5);
+                    onPlantGrow(par1World, par3,     par4 - 1, par5 + 1, par3, par4, par5);
+                    onPlantGrow(par1World, par3 + 1, par4 - 1, par5 + 1, par3, par4, par5);
                     this.growLeaves(par1World, par3, par5, par4 + var6, 2, par2Random);
 
                     for (int var14 = par4 + var6 - 2 - par2Random.nextInt(4); var14 > par4 + var6 / 2; var14 -= 2 + par2Random.nextInt(4))
@@ -106,7 +115,7 @@
                     {
                         var11 = par1World.getBlockId(par3, par4 + var10, par5);
 
-                        if (var11 == 0 || var11 == Block.leaves.blockID)
+                        if (var11 == 0 || Block.blocksList[var11] == null || Block.blocksList[var11].isLeaves(par1World, par3, par4 + var10, par5))
                         {
                             this.setBlockAndMetadata(par1World, par3, par4 + var10, par5, Block.wood.blockID, this.woodMetadata);
 
@@ -128,7 +137,7 @@
                         {
                             var11 = par1World.getBlockId(par3 + 1, par4 + var10, par5);
 
-                            if (var11 == 0 || var11 == Block.leaves.blockID)
+                            if (var11 == 0 || Block.blocksList[var11] == null || Block.blocksList[var11].isLeaves(par1World, par3 + 1, par4 + var10, par5))
                             {
                                 this.setBlockAndMetadata(par1World, par3 + 1, par4 + var10, par5, Block.wood.blockID, this.woodMetadata);
 
@@ -148,7 +157,7 @@
 
                             var11 = par1World.getBlockId(par3 + 1, par4 + var10, par5 + 1);
 
-                            if (var11 == 0 || var11 == Block.leaves.blockID)
+                            if (var11 == 0 || Block.blocksList[var11] == null || Block.blocksList[var11].isLeaves(par1World, par3 + 1, par4 + var10, par5 + 1))
                             {
                                 this.setBlockAndMetadata(par1World, par3 + 1, par4 + var10, par5 + 1, Block.wood.blockID, this.woodMetadata);
 
@@ -168,7 +177,7 @@
 
                             var11 = par1World.getBlockId(par3, par4 + var10, par5 + 1);
 
-                            if (var11 == 0 || var11 == Block.leaves.blockID)
+                            if (var11 == 0 || Block.blocksList[var11] == null || Block.blocksList[var11].isLeaves(par1World, par3, par4 + var10, par5 + 1))
                             {
                                 this.setBlockAndMetadata(par1World, par3, par4 + var10, par5 + 1, Block.wood.blockID, this.woodMetadata);
 
@@ -219,7 +228,12 @@
                 {
                     int var14 = var13 - par3;
 
-                    if ((var12 >= 0 || var14 >= 0 || var12 * var12 + var14 * var14 <= var10 * var10) && (var12 <= 0 && var14 <= 0 || var12 * var12 + var14 * var14 <= (var10 + 1) * (var10 + 1)) && (par6Random.nextInt(4) != 0 || var12 * var12 + var14 * var14 <= (var10 - 1) * (var10 - 1)) && !Block.opaqueCubeLookup[par1World.getBlockId(var11, var8, var13)])
+                    Block block = Block.blocksList[par1World.getBlockId(var11, var8, var13)];
+
+                    if ((var12 >= 0 || var14 >= 0 || var12 * var12 + var14 * var14 <= var10 * var10) && 
+                        (var12 <= 0 && var14 <= 0 || var12 * var12 + var14 * var14 <= (var10 + 1) * (var10 + 1)) && 
+                        (par6Random.nextInt(4) != 0 || var12 * var12 + var14 * var14 <= (var10 - 1) * (var10 - 1)) && 
+                        (block == null || block.canBeReplacedByLeaves(par1World, var11, var8, var13)))
                     {
                         this.setBlockAndMetadata(par1World, var11, var8, var13, Block.leaves.blockID, this.leavesMetadata);
                     }
@@ -227,4 +241,13 @@
             }
         }
     }
+    
+    private void onPlantGrow(World world, int x, int y, int z, int sourceX, int sourceY, int sourceZ)
+    {
+        Block block = Block.blocksList[world.getBlockId(x, y, z)];
+        if (block != null)
+        {
+            block.onPlantGrow(world, x, y, z, sourceX, sourceY, sourceZ);
+        }
+    }
 }
